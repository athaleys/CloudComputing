---
swagger: "2.0"
info:
  description: "A service to use AWS virtual machine EC2 using swagger -2.0 specification\
    \ and codegen"
  version: "0.0.1"
  title: "awsvm"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Sushant Athaley"
  license:
    name: "Apache"
host: "localhost:8080"
basePath: "/aws"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /vm:
    post:
      tags:
      - "vm"
      summary: "create a new vm"
      description: ""
      operationId: "create_vm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "VM object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/VM"
      responses:
        200:
          description: "VM Created"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.vm_controller"
  /vms:
    get:
      description: "Returns list on VMs"
      operationId: "vms_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "VM Instances"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VM"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /vms/{vmId}:
    get:
      tags:
      - "vm"
      summary: "Find vm by ID"
      description: "Returns a single vm"
      operationId: "get_vm_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "vmId"
        in: "path"
        description: "ID of VM to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/VM"
        400:
          description: "Invalid ID supplied"
        404:
          description: "VM not found"
      x-swagger-router-controller: "swagger_server.controllers.vm_controller"
definitions:
  VM:
    type: "object"
    properties:
      vmId:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      image:
        type: "string"
      location:
        type: "string"
      ramSize:
        type: "integer"
      diskSize:
        type: "integer"
      status:
        type: "string"
        description: "VM Status"
        enum:
        - "RUNNING"
        - "STARTING"
        - "REBOOTING"
        - "TERMINATED"
        - "STOPPING"
        - "STOPPED"
        - "PENDING"
        - "SUSPENDED"
        - "ERROR"
        - "PAUSED"
        - "RECONFIGURING"
        - "UNKNOWN"
    example:
      image: "image"
      diskSize: 1
      vmId: 0
      name: "name"
      location: "location"
      ramSize: 6
      status: "RUNNING"
